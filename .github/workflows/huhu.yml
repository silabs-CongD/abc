name: test

on:
  push:
  # pull_request:
  #   types: [opened, edited, synchronize]
jobs:
  readme:
    runs-on: ubuntu-latest
    steps:
    - name: Get repository name
      id: check
      run: |
        REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d "/" -f 2)
        echo "repo=$REPO_NAME" >> $GITHUB_OUTPUT
  
  build:
    runs-on: ubuntu-latest
    outputs:
      build_result: ${{ steps.check_build.outputs.build_result }}
    steps:
    - name: Get repository name
      id: check_build
      run: |
        echo "build_result=success" >> $GITHUB_OUTPUT
        sleep 10
        echo "build_result=failure" >> $GITHUB_OUTPUT
  
  sonar:
    runs-on: ubuntu-latest
    if: github.repository_visibility != 'public'
    outputs:
      sonar_result: ${{ steps.check_build.outputs.sonar_result }}
    steps:
    - name: Get repository name
      id: check_build
      run: |
        echo "sonar_result=failure" >> $GITHUB_OUTPUT
        
        sleep 10
        echo "sonar_result=success" >> $GITHUB_OUTPUT

  approve:
    needs: ${{ github.repository_visibility == 'public' && fromJson('["readme", "build"]') || fromJson('["readme", "build", "sonar"]') }}
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Step for public repo
        if: github.repository_visibility == 'public'
        run: echo "Public repo logic"

      - name: Step for private repo
        if: github.repository_visibility != 'public'
        run: |
          echo "Private repo logic"
          echo build:${{ needs.build.outputs.build_result }} 
          echo sonar:${{ needs.sonar.outputs.sonar_result }}
        
  # approve_internal:
  #   needs: [readme, build, sonar]
  #   if: always() && github.repository_visibility != 'public'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Get repository name
  #     run: |
  #       echo build:${{ needs.build.outputs.build_result }} 
  #       echo sonar:${{ needs.sonar.outputs.sonar_result }}
